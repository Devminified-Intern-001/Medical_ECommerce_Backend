tags:
    name: Products
    description: Product retrieval and management

/product/{productName}:
    get:
        summary: Retreive details for product page
        tags: [Products]
        security:
            - bearerAuth: []
        parameters:
            - in: path
              name: productName
              required: true
              schema:
                  type: string
                  example: Organic Carrots
              description: The name of desired product

        responses:
            "200":
                description: Data fetched
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: true
                                message:
                                    type: object
                                    properties:
                                        title:
                                            type: string
                                            example: Organic Carrots
                                        price:
                                            type: number
                                            example: 50
                                        productType:
                                            type: string
                                            example: Vegetables
                                        images:
                                            type: array
                                            items:
                                                type: string
                                            description: Not implemented yet
                                        defaultImage:
                                            type: number
                                            example: 0
                                            description: Index of default image in images array
                                        ingredients:
                                            type: array
                                            items:
                                                type: string
                                                example: Carrots
                                        servingPerContainer:
                                            type: number
                                            example: 3.5
                                        servingSize:
                                            type: string
                                            example: 1/2 cup (120g)
                                        tags:
                                            type: array
                                            items:
                                                type: string
                                                example: Organic
                                        amountsPerServing:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    item:
                                                        type: string
                                                        example: Total Fat
                                                    value:
                                                        type: string
                                                        example: 10g
                                                    valuePercent:
                                                        type: number
                                                        example: 12
                                        alertMsg:
                                            type: string
                                            example: Excess amount can cause overloading of vitamin A
                                            description: Something to show bold like allergy notices
                                        orderCount:
                                            type: number
                                            example: 250
                                            description: Number of orders with this product
                                        reviews:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    userName:
                                                        type: string
                                                        example: James Jones
                                                    rating:
                                                        type: number
                                                        example: 4
                                                    reviewText:
                                                        type: string
                                                        example: Very satisfactory food quality
                                                    reviewDate:
                                                        type: string
                                                        example: 03 July 2024
                                                        description: Review date

                                        reviewCount:
                                            type: number
                                            example: 25
                                            description: Number of review on this product
                                        avgRating:
                                            type: number
                                            example: 4.5
                                            description: Average user rating about this product (Out of 5)
                                        ratingStats:
                                            type: array
                                            items:
                                                type: number
                                                example: 5
                                            minItems: 6
                                            maxItems: 6
                                            description: Number of reviews classified according to rating (Array index means number of stars)

            "417":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: false
                                message:
                                    type: string
                                    example: No such product exists
            "401":
                description: Unauthorized
                content:
                    text/plain:
                        schema:
                            type: string
                            example: Unauthorized

/product:
    put:
        summary: Update an existing product
        description: Only admins can update a product
        tags: [Products]
        security:
            - bearerAuth: []
        requestBody:
            description: The data of a product to be modified
            required: true
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Product"
        responses:
            "201":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: true
                                message:
                                    type: string
                                    example: Updated successfully
            "417":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: false
                                message:
                                    type: string
                                    example: Something went wrong
            "401":
                content:
                    text/plain:
                        schema:
                            type: string
                            example: "Unauthorized"
            "403":
                content:
                    text/plain:
                        schema:
                            type: string
                            example: "Forbidden"
            "400":
                description: Invalid parameters
                content:
                    text/plain:
                        schema:
                            type: string
                            example: title (supposed to be in body) is required
    post:
        summary: Add a new product
        description: Only admins can add the products
        tags: [Products]
        security:
            - bearerAuth: []
        requestBody:
            description: The data of a product to be added
            required: true
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Product"
        responses:
            "201":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: true
                                message:
                                    type: string
                                    example: Updated successfully
            "417":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: false
                                message:
                                    type: string
                                    example: Something went wrong
            "401":
                content:
                    text/plain:
                        schema:
                            type: string
                            example: "Unauthorized"
            "403":
                content:
                    text/plain:
                        schema:
                            type: string
                            example: "Forbidden"
            "400":
                description: Invalid parameters
                content:
                    text/plain:
                        schema:
                            type: string
                            example: title (supposed to be in body) is required
    delete:
        summary: Delete a product
        description: Only admins can delete a product
        tags: [Products]
        security:
            - bearerAuth: []
        parameters:
            - in: query
              name: title
              type: string
              example: Carrots
        responses:
            "200":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: true
            "417":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: false
                                message:
                                    type: string
                                    example: No such product exists
            "403":
                content:
                    text/plain:
                        schema:
                            type: string
                            example: "Forbidden"
            "401":
                content:
                    text/plain:
                        schema:
                            type: string
                            example: "Unauthorized"
            "400":
                description: Invalid parameters
                content:
                    text/plain:
                        schema:
                            type: string
                            example: title (supposed to be in query) is required
/product/review:
    post:
        summary: Post a comment or reveiw on the product
        tags: [Products]
        security:
            - bearerAuth: []
        requestBody:
            required: true
            description: The data of reivew/comment to be posted
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            productTitle:
                                type: string
                                description: The product being reviewed
                            rating:
                                type: number
                                description: The rating (stars) by user out of 5
                            reviewText:
                                type: string
                                description: The main body of review
                        required:
                            - productTitle
                            - rating
                            - reviewText
                        example:
                            productTitle: Organic Carrots
                            rating: 4
                            reviewText: Very good item
        responses:
            "201":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: true
                                message:
                                    type: string
                                    example: Review Posted
            "417":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: false
                                message:
                                    type: string
                                    example: No such product exists
            "401":
                content:
                    text/plain:
                        schema:
                            type: string
                            example: "Unauthorized"
            "400":
                description: Invalid parameters
                content:
                    text/plain:
                        schema:
                            type: string
                            example: reviewText (supposed to be in body) is required
/product/get:
    post:
        summary: Get specific number of products meeting given criteria
        tags: [Products]
        security:
            - bearerAuth: []
        parameters:
            - in: query
              name: maxNumber
              type: number
              example: 2
              required: true
              description: Max numbers of products to return
        requestBody:
            required: true
            description: Filters to be applied
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            searchText:
                                type: string
                            onSales:
                                type: boolean
                            type:
                                type: string
                            newArrivals:
                                type: boolean
                            minPrice:
                                type: number
                                min: 0
                            maxPrice:
                                type: number
                                min: 0
                            dietNeeds:
                                type: array
                                items:
                                    type: string
                            allergenFilters:
                                type: array
                                items:
                                    type: string
                        example:
                            searchText: carrot
                            onSales: true
        responses:
            "200":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: true
                                message:
                                    type: array
                                    items:
                                        type: object
                                        $ref: "#/components/schemas/ProductSnap"
            "417":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: false
                                message:
                                    type: string
                                    example: Something went wrong
            "400":
                description: Invalid parameters
                content:
                    text/plain:
                        schema:
                            type: string
                            example: onSales (supposed to be in body) is a boolean value
            "401":
                content:
                    text/plain:
                        schema:
                            type: string
                            example: "Unauthorized"
/product/addStock:
    patch:
        summary: Add some stock and increase the quantity
        description: Only admins can add to stock
        tags: [Products]
        security:
            - bearerAuth: []
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            title:
                                type: string
                            quantity:
                                type: number
                        required:
                            - title
                            - quantity
                        example:
                            title: Organic Carrots
                            quantity: 50
        responses:
            "200":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: true
            "417":
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                done:
                                    type: boolean
                                    example: false
                                message:
                                    type: string
                                    example: No such product exists
            "401":
                content:
                    text/plain:
                        schema:
                            type: string
                            example: "Unauthorized"
            "403":
                content:
                    text/plain:
                        schema:
                            type: string
                            example: "Forbidden"
            "400":
                description: Invalid parameters
                content:
                    text/plain:
                        schema:
                            type: string
                            example: title (supposed to be in body) is required
